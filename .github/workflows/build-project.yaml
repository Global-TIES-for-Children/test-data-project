on:
  push:
    branches:
      - main
      - 'staging/v*'
  pull_request:
    branches:
      - main
      - 'staging/v*'

name: build-project

jobs:
  build-project:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
      - uses: r-lib/actions/setup-pandoc@v1
      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
      - name: Create package cache
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-build-packages-${{ hashFiles('install.R', 'DESCRIPTION') }}
      - name: Install dependencies
        run: Rscript install.R
        env:
          GITHUB_PAT: ${{ secrets.GH_PAT }}
      - name: Create drake cache
        uses: actions/cache@v2
        with:
          path: .drake
          key: ${{ runner.os }}-build-drake-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/*.R') }}
          restore-keys: |
            ${{ runner.os }}-build-drake-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/*.R') }}
            ${{ runner.os }}-build-drake-${{ secrets.CACHE_VERSION }}-
            ${{ runner.os }}-build-drake-
      - name: Create OSF cache
        uses: actions/cache@v2
        with:
          path: "osfcache"
          key: ${{ runner.os }}-build-osf-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/*.R') }}
          restore-keys: |
            ${{ runner.os }}-build-osf-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/*.R') }}
            ${{ runner.os }}-build-osf-${{ secrets.CACHE_VERSION }}-
            ${{ runner.os }}-build-osf-
      - name: Run drake pipeline
        env:
          OSF_PAT: ${{ secrets.OSF_PAT }}
          F_RUN_TESTS: TRUE
        run: Rscript make.R